{"version":3,"sources":["pokeCard.js","App.js","reportWebVitals.js","Component/Bookmark.js","index.js"],"names":["Pokemon","ele","handleBookmark","bookmarkArr","id","url","split","class","style","width","includes","name","onClick","e","aria-hidden","src","alt","height","href","App","useState","pokemon","setpokemon","onSearch","setonSearch","datalimit","setdatalimit","setbookmarkArr","isBookmark","setisBookmark","useEffect","a","getPokemonData","fetch","response","json","data","results","handleChange","target","value","length","filter","type","className","marginLeft","placeholder","onChange","map","dataLength","next","hasMore","loader","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Bookmark","useParams","paddingTop","paddingBottom","paddingLeft","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.3b468136.chunk.js","sourcesContent":["import React from 'react'\n\nconst Pokemon = ({ ele, handleBookmark, bookmarkArr}) => {\n  \n  const id = ele.url.split('/')[6]\n\n  return <>\n        <div class=\"col-3 mt-2\">\n            <div class=\"card\" style={{ width: '20rem' }}>\n                <i class={`fa fa-bookmark${bookmarkArr.includes(id) ? \"\" : \"-o\"}`} id={{'id' : id, 'name' : ele.name}} onClick={(e) => handleBookmark(e,id, ele.name)} name={ele.name} aria-hidden=\"true\"></i>\n                <img class=\"card-img-top \" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt=\"Card image cap\" style={{height:'50%', width:'50%'}} />\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{ele.name}</h5>\n                <h5 class=\"card-title\">#{id ? id : ele.id}</h5>\n          <a href={'pokemon/' + id + '/' + ele.name} class=\"btn btn-primary\">{ ele.name}</a>\n            </div>\n          </div>\n        </div>\n    </>\n}\n\nexport default Pokemon;","import './App.css';\nimport React from 'react';\nimport { useEffect, useState } from 'react'\n// import Pokemon from 'pokemon-images';\nimport Pokemon from './pokeCard';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\n\n\nfunction App() {\n\n  \n\n  const [pokemon, setpokemon] = useState([])\n  const [onSearch, setonSearch] = useState(true)\n  const [datalimit, setdatalimit] = useState(10)\n  const [count, setcount] = useState(1)\n  const [bookmarkArr, setbookmarkArr] = useState([])\n  const [isBookmark, setisBookmark] = useState(false)\n\n  useEffect( async () => {\n    getPokemonData()\n  }, [])\n  // useEffect(() => {\n  //   setcount(count + 1)\n  // }, [count])\n\n\n  const getPokemonData = async () => {\n    setisBookmark(false)\n    setdatalimit(datalimit + 10)\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${datalimit}%27`)\n    const data = await response.json()\n    setpokemon(data.results)\n  }\n\n  const handleChange = async (e) => {\n    if (!e.target.value) {\n    }\n    if (e.target.value.length > 3) {\n      setonSearch(false)\n      setpokemon('')\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${e.target.value}`)\n      const data = await response.json()\n      if (data) { setonSearch(false);setpokemon(data) }\n      \n    } else {\n\n      const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1000%27')\n      const data = await response.json()\n      setpokemon(data.results)\n      setonSearch(true)\n      \n    }\n   \n  }\n\n  const handleBookmark = (e, id, name) => {\n    // if ({ id, name } in bookmarkArr) {\n    //   alert(\"Name exists\")\n    // }\n    // console.log(bookmarkArr);\n    // // bookmarkArr.push({'id':id,'name':name})\n    // if (e.target.className == 'fa fa-bookmark-o' && id) {\n    //   e.target.className = 'fa fa-bookmark'\n    // } else {\n    //   e.target.className = 'fa fa-bookmark-o'\n    // }\n\n    if (!bookmarkArr.includes(id)) {\n      setbookmarkArr([...bookmarkArr, id])\n    } else {\n      setbookmarkArr(bookmarkArr.filter(ele => ele !== id))\n    }\n  }\n  \n  const getBookmark = () => {\n    setisBookmark(true)\n    if (bookmarkArr) {\n        // bookmarkArr.map(ele => {\n        //   const response\n        // })\n    }\n\n  }\n\n\n  return (\n    <div class=\"container\">\n            <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={getPokemonData} >All Pokemon</button>\n      <input className='mt-2' type='search' style={{ marginLeft: '40%' }} placeholder=\"Enter Full Name\" onChange={handleChange} />\n      <button type=\"button\" class=\"btn btn-dark btn-sm\" onClick={getBookmark} >Bookmark</button>\n\n      <div class=\"row justify-content-start\">\n        {isBookmark ?\n          bookmarkArr.map(id => {\n            return <>\n                  <div class=\"col-3 mt-2\">\n                      <div class=\"card\" style={{ width: '15rem' }}>\n                        <img class=\"card-img-top \" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt=\"Card image cap\" style={{height:'50%', width:'50%'}} />\n                          <div class=\"card-body\">\n                                {/* <h5 class=\"card-title\">{pokemon.name}</h5> */}\n                                <h5 class=\"card-title\">#{id}</h5>\n                                \n                            {/* <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                            {/* <a href={'pokemon/' + id}class=\"btn btn-primary\"></a> */}\n                          </div>\n                        </div>\n                    </div>\n              </>\n          }) :\n          (onSearch ?\n          <InfiniteScroll\n            dataLength={pokemon.length}\n            next={getPokemonData}\n            hasMore={true}\n            loader={<h4>Loading...</h4>}\n            className='row justify-content-start'\n          >\n            {pokemon.map(ele => {\n              console.log(ele);\n                return (\n                  <Pokemon ele={ele} id={ele.id} handleBookmark={handleBookmark} bookmarkArr={bookmarkArr} />\n                  )\n          })}</InfiniteScroll> :\n          pokemon ? (<div class=\"col-3 mt-2\">\n                          <div class=\"card\" style={{ width: '15rem' }}>\n                            <img class=\"card-img-top \" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`} alt=\"Card image cap\" style={{height:'50%', width:'50%'}} />\n                              <div class=\"card-body\">\n                                    <h5 class=\"card-title\">{pokemon.name}</h5>\n                                    <h5 class=\"card-title\">#{pokemon.id}</h5>\n                                    \n                                {/* <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n                                <a href={'pokemon/' + pokemon.id + '/' + pokemon.name} className='btn btn-primary' >{pokemon.name}</a>\n                              </div>\n                            </div>\n                  </div>) :\n                    'Oops No Data Found ! Please Write Full Name ')}\n                \n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport { useParams } from 'react-router';\n\n\nconst Bookmark = () => {\n\n    const { id, name } = useParams()\n    console.log(id,name);\n    \n\n    // const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\n    // const data = response.json()\n\n    // <div className='container'>\n    //         <div class=\"row justify-content-start\">\n    //             <div class=\"col-3 mt-2\">\n    //                 <div class=\"card\" style={{ width: '20rem' }}>\n    //                     <img class=\"card-img-top \" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} alt=\"Card image cap\" style={{height:'50%', width:'50%'}} />\n    //                     <div class=\"card-body\">\n    //                         <h5 class=\"card-title\">{name}</h5>\n    //                         <h5 class=\"card-title\">#{id }</h5>\n                        \n    //                         <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    //                         <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n\n    return <>\n        <div class=\"profile-card-6\" style={{paddingTop : '80px', height:'400px'}} ><img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`} class=\"img img-responsive\" style={{width : '150px', paddingBottom:'100px', paddingLeft:'20px'}} />\n        \n            <div class=\"profile-name text-dark\">{name}\n\n            </div>\n\n\n        <div class=\"profile-overview\">\n            <div class=\"profile-overview\">\n                <div class=\"row text-center\">\n                    <div class=\"col-xs-4 text-dark\">\n                            <h3>#{id }</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        \n    </>\n}\n\nexport default Bookmark;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Bookmark from './Component/Bookmark'\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n\n  <Router>\n    <Routes>\n    <Route path='/' element={<App/>} />\n    <Route path='/pokemon/:id/:name' element={<Bookmark/>} />\n    </Routes>\n   </Router>\n  </React.StrictMode>\n   ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}